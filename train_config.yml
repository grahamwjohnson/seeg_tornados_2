# Patient selection
# pat_id: 'Epat31'

pat_dir: '/media/graham/MOBO_RAID0/Ubuntu_Projects/SEEG_Tornados/results/Bipole_datasets/By_Channel_Scale/HistEqualScale/data_normalized_to_first_24_hours/wholeband/10pats' #   2pats'     # 10pats' 
train_val_pat_perc: kwargs['train_val_pat_perc'] = [0.8, 0.2] #[0.5, 0.5] # [0.8, 0.2]
num_freq_bands: 1
pat_num_channels_LUT: '/media/graham/MOBO_RAID0/Ubuntu_Projects/SEEG_Tornados/data/pats_num_channels_LUT.csv'
num_samples: kwargs['num_samples'] = 1024*512 # MATCH TO FILE SELECTION 'duration_stride_str' BELOW 512*512, 10*512 , 60*512    
FS: 512             

# Dataset formation variables
atd_file: '/media/graham/MOBO_RAID0/Ubuntu_Projects/SEEG_Tornados/data/all_time_data_01092023_112957.csv'
data_dir_subfolder: '/scaled_data_epochs'
base_path: '/media/graham/MOBO_RAID0/Ubuntu_Projects/SEEG_Tornados/results'
scale_type: 'HistEqualScale'  # 'LinearScale', 'HyperTanScaling', 'CubeRootScale', 'HistEqualScale'
channel_scale_style: 'By_Channel_Scale' # 'Same_Scale_For_All_Channels' # By_Channel_Scale # If using multiple freq bands, the preprocessing script rescaales, so be careful and should use 'by channel' scaling 
bipole_or_monopole: 'Bipole_datasets'
scale_epoch_str: 'data_normalized_to_first_24_hours' # 'data_normalized_to_first_24_hours' # 'data_normalized_to_first_seizure_centered_24_hours' # , 'Dictated by preprocessing: Should probably decide to have duration match 'train_hours_desired', but do not HAVE to
# duration_stride_str: 'DurStr_1024s896s_epoched_datasets' # 'DurStr_1024s896s_epoched_datasets', 'DurStr_512s480s_epoched_datasets', 'DurStr_10s2s_epoched_datasets', 'DurStr_60s10s_epoched_datasets'
duration_stride_str: '10pats'
freq_bands_str: 'wholeband' # 1to12Hz_12to59Hz_61to179Hz, wholeband
intrapatient_dataset_style: 2 # 1 all data (no SPES), 2 all data (with SPES), 3 ONLY SPES
train_hour_dataset_range: kwargs['train_hour_dataset_range'] = [-1, -1]  # [-1, -1] means all, [X, -1] means from X to end
rand_name_json: '/media/graham/MOBO_RAID0/Ubuntu_Projects/SEEG_Tornados/code2/utilities/animals.json'
periictal_augmentation_perc: 0.0 # May mess with sequential saving of latents if enabled
preictal_augmentation_seconds: 1800 # NOT CURRENTLY BEING USED

# Training settings
continue_existing_training: True  # if True and 'cont_train_model_dir' is '', will ask for directory with dialog box 
cont_train_model_dir: '/media/graham/MOBO_RAID0/Ubuntu_Projects/SEEG_Tornados/results/Bipole_datasets/By_Channel_Scale/HistEqualScale/data_normalized_to_first_24_hours/wholeband/10pats/trained_models/dataset_train80.0_val20.0/dorado_Sat_Jan_18_10_42_22_2025' 
inference_selection: 2 # 1: all data w/o SPES, 2: all data w/ SPES, 3: only SPES 

### VAE 
autoencode_samples: 8
cnn_channels: 512
num_cnn_blocks: 8 
num_cnn_layers_per_block: 1 
kernel_size: 3 
dilation_base: 2 # dilation = dilation_base ** (b * num_cnn_layers_per_block + i)

padded_channels: 256 #input padded to allow for different number of channels
crattn_embed_dim: 512
crattn_num_highdim_heads: 8 # at padding dimension
crattn_num_highdim_layers: 8
crattn_num_lowdim_heads: 1 # at embed dim dimension
crattn_num_lowdim_layers: 1
crattn_max_seq_len: 8
crattn_cnn_kernel_size: 3
crattn_dropout: 0.1

num_decode_layers: kwargs['num_decode_layers'] = int(math.log(kwargs['autoencode_samples'],2) - 1) # Minus 1 because of first conv that goes from hidden dims to output channel dims
decode_kernel_size: 3

### VAE Core
top_dims: 4096 
hidden_dims: 4096
latent_dim: 2048  # 1024

### Transformer
transformer_seq_length: 512
# Model hardware limits
max_seq_len: 512
max_batch_size: 8
# Model size
n_layers: 16
n_heads: 16
multiple_of: 256 
ffn_dim_multiplier: 0.2
attention_dropout: 0.2  #### ####

core_weight_decay: 0.1
transformer_weight_decay: 0.1
adamW_beta1: 0.9
adamW_beta2: 0.95 

# Patient hash embedding
train_num_rand_hashes: 256
val_num_rand_hashes: 1

train_subsample_file_factor: 20480 # randomly decreases training passes per file per epoch
valfinetune_subsample_file_factor: 2048
valunseen_subsample_file_factor: 20480
wdecode_batch_size: 4 # This is for full enc-dec passes for loss calculations and backprop. Currently, must use 1 for circular loss
onlylatent_batch_size: 8 # this is for when loss is not being calculated
pacmap_every: 99999 # Must be within a 'quick_recon_val_every' to be reached
finetune_pacmap: True
quickval_red: 8 # This will divide num_samples in a file to do a very quick validation recon by truncating mid file
val_every: 20
num_rand_recon_plots: 4
epochs_to_train: 999999 

# Realtime plotting
realtime_latent_printing: True
num_realtime_channels_recon: 1 # columns of random channel plots
realtime_printing_interval: 100
num_recon_samples: 1024 # this will limit how much is shown in recon plots, ERROR if not enough samples, pulls from END of transformer sequence 
num_realtime_dims: 5
recent_display_iters: 5 # How often to print to console when training & how often to log to WandB

# Autoregressive Inference
autoreg_every: 1
autoreg_context_tokens: kwargs['autoreg_context_tokens'] = kwargs['transformer_seq_length'] - 1
autoreg_tokens_to_gen: 32 # kwargs['autoreg_tokens_to_gen'] = kwargs['transformer_seq_length']
autoreg_channels: 3
autoreg_batchsize: 2
autoreg_num_rand_pats: 2
autoreg_num_rand_files: 2

# Beta VAE controls
KL_max: kwargs['KL_max'] = 1e-5 # 1e-6 # 1e-3 #1 #1e-6 # 1e-3  ############# CHeck if loss is actually used!!! May be commented out ###############
KL_min: kwargs['KL_min'] = 0
KL_epochs_AT_max: 5
KL_epochs_TO_max: 5

# Weights
recon_weight: 3
transformer_weight: 1 # 0.01  ############# CHeck if loss is actually used!!! May be commented out ###############
mean_loss_weight: 1

# VAE learning rate controls
LR_max_core: kwargs['LR_max_core'] = 1e-5
LR_min_core: kwargs['LR_min_core'] = 1e-6
LR_epochs_TO_max_core: 2
LR_epochs_AT_max_core: 0
manual_gamma_core: 0.25 # Will be applied to the LR_max & LR_min every 'manual_step_size'
manual_step_size_core: 99999

# Transformer learning rate controls
LR_max_transformer: kwargs['LR_max_transformer'] = 1e-6
LR_min_transformer: kwargs['LR_min_transformer'] = 1e-8
LR_epochs_TO_max_transformer: 3
LR_epochs_AT_max_transformer: 0
manual_gamma_transformer: 0.25 # Will be applied to the LR_max & LR_min every 'manual_step_size'
manual_step_size_transformer: 99999


# Val FineTune controls
val_finetune_hour_dataset_range: kwargs['val_finetune_hour_dataset_range'] = [2, 50]
val_unseen_hour_dataset_range: kwargs['val_unseen_hour_dataset_range'] = [50, -1]
epochs_val_finetune: 1
LR_val_vae: kwargs['LR_val_vae'] = 1e-7
LR_val_transformer: kwargs['LR_val_transformer'] = 1e-8
manual_step_size_val_core: 10
manual_gamma_val_core: 0.5
val_subsample_file_factor: 64 # Only iterates through file_lnegth/X

delete_old_checkpoints: True   

# Previous model initial params
tmp_file_dir: '/tmp_files'

# PaCMAP and HDBSCAN settings
# NN local, MN: global, FP global and local
# Phase 1:
  # w_MN = (1 - itr/phase_1_iters) * w_MN_init + itr/phase_1_iters * 3.0     Starts high, goes down to 3
  # w_neighbors = 2.0
  # w_FP = 1.0
# Phase 2:
  # w_MN = 3.0
  # w_neighbors = 3
  # w_FP = 1
# Phase 3:
  # w_MN = 0.0
  # w_neighbors = 1.
  # w_FP = 1.
pre_PaCMAP_window_sec: 10 
pre_PaCMAP_stride_sec: 5 
pacmap_LR: 1 # 0.5                                                                                              #################
pacmap_NumIters: kwargs['pacmap_NumIters'] = (300,150,150) # (Phase 1,2,3), default (100, 100, 250) ##################################
pacmap_NN: kwargs['pacmap_NN'] = None
pacmap_MN_ratio: 0.5 # 2.0 # 2.0 # Default 0.5
pacmap_FP_ratio: 2.0 # 0.5 # Default 2.0
pacmap_MN_ratio_MedDim: 0.5 # 2.0 #2.0
pacmap_FP_ratio_MedDim: 2.0 # 0.5
pacmap_MedDim_numdims: 10
HDBSCAN_min_cluster_size: 200 # e.g. value of 50: 10 seconds avg window with 1 second stride would be ~1 min
HDBSCAN_min_samples: 100 # Closer to min_cluster_size --> more conservative
save_windowed_latent: True # If true, the data after running through embedder and wonswing will be saved

# Multiprocessing 
subprocess_num_threads: 1
num_dataloader_workers_RANDOM: 0
num_dataloader_workers_SEQUENTIAL: 0

# Plotting variables
plot_alpha: 0.5
plot_preictal_color_sec: 3600
plot_postictal_color_sec: 3600
s_plot: 5
seiz_type_list: kwargs['seiz_type_list'] = ['FBTC', 'FIAS', 'FAS_to_FIAS', 'FAS', 'Focal unknown awareness', 'Unknown', 'Subclinical', 'Non-electrographic'] # Leftward overwites rightward
seiz_plot_mult: kwargs['seiz_plot_mult'] = [1,       3,     5,              7,    9,                           11,        13,            15] # Assuming increasing order, NOTE: base value of 3 is added in the code
pic_sub_dirs: kwargs['pic_sub_dirs'] = [] #['MeanLogvar_Train_SEQUENTIAL', 'MeanLogvar_Val_SEQUENTIAL','Recon_Train_SEQUENTIAL' ,'Recon_Val_SEQUENTIAL','Recon_Inference','PaCMAP_EpochWide_Train', 'PaCMAP_EpochWide_Val','PaCMAP_SingleFile_Inference', 'Cluster_Timeline_Train', 'Cluster_Timeline_Val','Cluster_Timeline_Inference'] 
pic_types: kwargs['pic_types'] = ['JPEGs','SVGs']

